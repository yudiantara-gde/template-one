@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,600,700,300i,600i,700i|Raleway:600,800");

/*
	Stater Kick with gulp, sass and pug
	https://github.com/yudiantara-gde
	Free for personal and commercial use under the CCA 3.0 license
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

body {
  -webkit-text-size-adjust: none;
}

mark {
  background-color: transparent;
  color: inherit;
}

input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input,
select,
textarea {
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none;
}

/* Basic */

@-ms-viewport {
  width: device-width;
}

body {
  -ms-overflow-style: scrollbar;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

html {
  overflow-x: hidden;
}

body {
  background: #ffffff;
  overflow-x: hidden;
}

body.is-preload *,
body.is-preload *:before,
body.is-preload *:after {
  -webkit-animation: none !important;
  animation: none !important;
  transition: none !important;
}

/* Typography */

html {
  font-size: 18pt;
}

body {
  background-color: #ffffff;
  color: #000000;
}

body,
input,
select,
textarea {
  color: #000000;
  font-family: "Source Sans Pro", Helvetica, sans-serif;
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.0375em;
  line-height: 2;
}

a {
  transition: border-bottom-color 0.25s ease-in-out;
  text-decoration: none;
  color: #000000;
  border-bottom: dotted 1px;
}

a:hover {
  text-decoration: none;
  border-bottom-color: transparent;
}

strong,
b {
  font-weight: 600;
  color: #000000;
}

em,
i {
  font-style: italic;
}

p {
  margin: 0 0 2rem 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #000000;
  font-family: "Raleway", Helvetica, sans-serif;
  font-weight: 600;
  letter-spacing: 0.175em;
  line-height: 1.75;
  margin: 0 0 1.5rem 0;
  text-transform: uppercase;
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  color: inherit;
  text-decoration: none;
}

h1 {
  font-family: "Source Sans Pro", Helvetica, sans-serif;
  font-size: 5rem;
  font-weight: 700;
  letter-spacing: -0.05em;
  line-height: 1.1;
  margin: 0 0 1.5rem 0;
  text-transform: none;
}

h2 {
  font-size: 1.25rem;
  font-weight: 800;
  margin: 0 0 2rem 0;
}

h3 {
  font-size: 0.875rem;
}

h4 {
  font-size: 0.875rem;
}

h5 {
  font-size: 0.75rem;
}

h6 {
  font-size: 0.625rem;
}

sub {
  font-size: 0.8rem;
  position: relative;
  top: 0.5rem;
}

sup {
  font-size: 0.8rem;
  position: relative;
  top: -0.5rem;
}

blockquote {
  border-left: solid 0.5rem rgba(144, 144, 144, 0.25);
  font-style: italic;
  margin: 0 0 2rem 0;
  padding: 1rem 0 1rem 2rem;
}

code {
  background: rgba(144, 144, 144, 0.1);
  border-radius: 0.325rem;
  font-family: "Courier New", monospace;
  font-size: 0.9rem;
  margin: 0 0.25rem;
  padding: 0.25rem 0.65rem;
}

pre {
  -webkit-overflow-scrolling: touch;
  font-family: "Courier New", monospace;
  font-size: 0.9rem;
  margin: 0 0 2rem 0;
  width: 100%;
}

pre code {
  display: block;
  line-height: 1.75;
  padding: 1rem 1.5rem;
  overflow-x: auto;
}

hr {
  border: 0;
  border-bottom: solid 2px rgba(144, 144, 144, 0.25);
  margin: 3rem 0;
}

hr.major {
  margin: 5rem 0;
}

/* Row */

.row {
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
  align-items: stretch;
}

.row > * {
  box-sizing: border-box;
}

.row.gtr-uniform > * > :last-child {
  margin-bottom: 0;
}

.row.aln-left {
  justify-content: flex-start;
}

.row.aln-center {
  justify-content: center;
}

.row.aln-right {
  justify-content: flex-end;
}

.row.aln-top {
  align-items: flex-start;
}

.row.aln-middle {
  align-items: center;
}

.row.aln-bottom {
  align-items: flex-end;
}

.row > .imp {
  order: -1;
}

.row > .col-1 {
  width: 8.33333%;
}

.row > .off-1 {
  margin-left: 8.33333%;
}

.row > .col-2 {
  width: 16.66667%;
}

.row > .off-2 {
  margin-left: 16.66667%;
}

.row > .col-3 {
  width: 25%;
}

.row > .off-3 {
  margin-left: 25%;
}

.row > .col-4 {
  width: 33.33333%;
}

.row > .off-4 {
  margin-left: 33.33333%;
}

.row > .col-5 {
  width: 41.66667%;
}

.row > .off-5 {
  margin-left: 41.66667%;
}

.row > .col-6 {
  width: 50%;
}

.row > .off-6 {
  margin-left: 50%;
}

.row > .col-7 {
  width: 58.33333%;
}

.row > .off-7 {
  margin-left: 58.33333%;
}

.row > .col-8 {
  width: 66.66667%;
}

.row > .off-8 {
  margin-left: 66.66667%;
}

.row > .col-9 {
  width: 75%;
}

.row > .off-9 {
  margin-left: 75%;
}

.row > .col-10 {
  width: 83.33333%;
}

.row > .off-10 {
  margin-left: 83.33333%;
}

.row > .col-11 {
  width: 91.66667%;
}

.row > .off-11 {
  margin-left: 91.66667%;
}

.row > .col-12 {
  width: 100%;
}

.row > .off-12 {
  margin-left: 100%;
}

.row.gtr-0 {
  margin-top: 0;
  margin-left: 0rem;
}

.row.gtr-0 > * {
  padding: 0 0 0 0rem;
}

.row.gtr-0.gtr-uniform {
  margin-top: 0rem;
}

.row.gtr-0.gtr-uniform > * {
  padding-top: 0rem;
}

.row.gtr-25 {
  margin-top: 0;
  margin-left: -0.5rem;
}

.row.gtr-25 > * {
  padding: 0 0 0 0.5rem;
}

.row.gtr-25.gtr-uniform {
  margin-top: -0.5rem;
}

.row.gtr-25.gtr-uniform > * {
  padding-top: 0.5rem;
}

.row.gtr-50 {
  margin-top: 0;
  margin-left: -1rem;
}

.row.gtr-50 > * {
  padding: 0 0 0 1rem;
}

.row.gtr-50.gtr-uniform {
  margin-top: -1rem;
}

.row.gtr-50.gtr-uniform > * {
  padding-top: 1rem;
}

.row {
  margin-top: 0;
  margin-left: -2rem;
}

.row > * {
  padding: 0 0 0 2rem;
}

.row.gtr-uniform {
  margin-top: -2rem;
}

.row.gtr-uniform > * {
  padding-top: 2rem;
}

.row.gtr-150 {
  margin-top: 0;
  margin-left: -3rem;
}

.row.gtr-150 > * {
  padding: 0 0 0 3rem;
}

.row.gtr-150.gtr-uniform {
  margin-top: -3rem;
}

.row.gtr-150.gtr-uniform > * {
  padding-top: 3rem;
}

.row.gtr-200 {
  margin-top: 0;
  margin-left: -4rem;
}

.row.gtr-200 > * {
  padding: 0 0 0 4rem;
}

.row.gtr-200.gtr-uniform {
  margin-top: -4rem;
}

.row.gtr-200.gtr-uniform > * {
  padding-top: 4rem;
}

/* Box */

.box {
  border: solid 2px rgba(144, 144, 144, 0.25);
  border-radius: 0.325rem;
  margin-bottom: 2rem;
  padding: 1.5rem;
}

.box > :last-child {
  margin-bottom: 0;
}

.box.alt {
  border: 0;
  border-radius: 0;
  padding: 0;
}

/* Button */

input[type="submit"],
input[type="reset"],
input[type="button"],
button,
.button {
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  appearance: none;
  transition: background-color 0.25s ease-in-out, box-shadow 0.25s ease-in-out, color 0.25s ease-in-out;
  background-color: transparent;
  border-radius: 0.325rem;
  border: 0;
  box-shadow: inset 0 0 0 2px rgba(144, 144, 144, 0.25);
  color: #000000 !important;
  cursor: pointer;
  display: inline-block;
  font-family: "Raleway", Helvetica, sans-serif;
  font-size: 0.6rem;
  font-weight: 600;
  height: 3rem;
  letter-spacing: 0.175em;
  line-height: 3rem;
  padding: 0 2rem;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  white-space: nowrap;
}

input[type="submit"]:hover,
input[type="reset"]:hover,
input[type="button"]:hover,
button:hover,
.button:hover {
  box-shadow: inset 0 0 0 2px #2ee4bb;
  color: #2ee4bb !important;
}

input[type="submit"]:active,
input[type="reset"]:active,
input[type="button"]:active,
button:active,
.button:active {
  background-color: rgba(73, 252, 212, 0.25);
  box-shadow: inset 0 0 0 2px #2ee4bb;
  color: #2ee4bb !important;
}

input[type="submit"].small,
input[type="reset"].small,
input[type="button"].small,
button.small,
.button.small {
  font-size: 0.5rem;
  height: 2.25rem;
  line-height: 2.25rem;
  padding: 0 1.25rem;
}

input[type="submit"].large,
input[type="reset"].large,
input[type="button"].large,
button.large,
.button.large {
  font-size: 0.7rem;
  height: 3.2625rem;
  line-height: 3.2625rem;
  padding: 0 3.25rem;
}

input[type="submit"].wide,
input[type="reset"].wide,
input[type="button"].wide,
button.wide,
.button.wide {
  min-width: 13rem;
}

input[type="submit"].icon:before,
input[type="reset"].icon:before,
input[type="button"].icon:before,
button.icon:before,
.button.icon:before {
  margin-right: 0.5rem;
}

input[type="submit"].fit,
input[type="reset"].fit,
input[type="button"].fit,
button.fit,
.button.fit {
  width: 100%;
}

input[type="submit"].disabled,
input[type="submit"]:disabled,
input[type="reset"].disabled,
input[type="reset"]:disabled,
input[type="button"].disabled,
input[type="button"]:disabled,
button.disabled,
button:disabled,
.button.disabled,
.button:disabled {
  pointer-events: none;
  opacity: 0.25;
}

input[type="submit"].primary,
input[type="reset"].primary,
input[type="button"].primary,
button.primary,
.button.primary {
  background-color: #49fcd4;
  box-shadow: none;
  color: #000000 !important;
}

input[type="submit"].primary:hover,
input[type="reset"].primary:hover,
input[type="button"].primary:hover,
button.primary:hover,
.button.primary:hover {
  background-color: #93ffe7;
}

input[type="submit"].primary:active,
input[type="reset"].primary:active,
input[type="button"].primary:active,
button.primary:active,
.button.primary:active {
  background-color: #44f2cb;
}

/* Icon */

.icon {
  text-decoration: none;
  border-bottom: none;
  position: relative;
}

.icon:before {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  text-transform: none !important;
  font-family: 'Font Awesome 5 Free';
  font-weight: 400;
}

.icon > .label {
  display: none;
}

.icon.solid:before {
  font-weight: 900;
}

.icon.brands:before {
  font-family: 'Font Awesome 5 Brands';
}

/* Image */

.image {
  border: 0;
  display: inline-block;
  position: relative;
}

.image img {
  display: block;
}

.image[data-position] img {
  -moz-object-fit: cover;
  -webkit-object-fit: cover;
  -ms-object-fit: cover;
  -o-object-fit: cover;
  object-fit: cover;
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.image[data-position="top left"] img {
  -moz-object-position: top left;
  -webkit-object-position: top left;
  -ms-object-position: top left;
  -o-object-position: top left;
  object-position: top left;
}

.image[data-position="top"] img {
  -moz-object-position: top;
  -webkit-object-position: top;
  -ms-object-position: top;
  -o-object-position: top;
  object-position: top;
}

.image[data-position="top right"] img {
  -moz-object-position: top right;
  -webkit-object-position: top right;
  -ms-object-position: top right;
  -o-object-position: top right;
  object-position: top right;
}

.image[data-position="right"] img {
  -moz-object-position: right;
  -webkit-object-position: right;
  -ms-object-position: right;
  -o-object-position: right;
  object-position: right;
}

.image[data-position="bottom right"] img {
  -moz-object-position: bottom right;
  -webkit-object-position: bottom right;
  -ms-object-position: bottom right;
  -o-object-position: bottom right;
  object-position: bottom right;
}

.image[data-position="bottom"] img {
  -moz-object-position: bottom;
  -webkit-object-position: bottom;
  -ms-object-position: bottom;
  -o-object-position: bottom;
  object-position: bottom;
}

.image[data-position="bottom left"] img {
  -moz-object-position: bottom left;
  -webkit-object-position: bottom left;
  -ms-object-position: bottom left;
  -o-object-position: bottom left;
  object-position: bottom left;
}

.image[data-position="left"] img {
  -moz-object-position: left;
  -webkit-object-position: left;
  -ms-object-position: left;
  -o-object-position: left;
  object-position: left;
}

.image[data-position="center"] img {
  -moz-object-position: center;
  -webkit-object-position: center;
  -ms-object-position: center;
  -o-object-position: center;
  object-position: center;
}

.image[data-position="25% 25%"] img {
  -moz-object-position: 25% 25%;
  -webkit-object-position: 25% 25%;
  -ms-object-position: 25% 25%;
  -o-object-position: 25% 25%;
  object-position: 25% 25%;
}

.image[data-position="75% 25%"] img {
  -moz-object-position: 75% 25%;
  -webkit-object-position: 75% 25%;
  -ms-object-position: 75% 25%;
  -o-object-position: 75% 25%;
  object-position: 75% 25%;
}

.image[data-position="75% 75%"] img {
  -moz-object-position: 75% 75%;
  -webkit-object-position: 75% 75%;
  -ms-object-position: 75% 75%;
  -o-object-position: 75% 75%;
  object-position: 75% 75%;
}

.image[data-position="25% 75%"] img {
  -moz-object-position: 25% 75%;
  -webkit-object-position: 25% 75%;
  -ms-object-position: 25% 75%;
  -o-object-position: 25% 75%;
  object-position: 25% 75%;
}

.image.left,
.image.right {
  max-width: 40%;
}

.image.left img,
.image.right img {
  width: 100%;
}

.image.left {
  float: left;
  margin: 0 2rem 2rem 0;
  top: 0.25rem;
}

.image.right {
  float: right;
  margin: 0 0 2rem 2rem;
  top: 0.25rem;
}

.image.fit {
  display: block;
  margin: 0 0 2rem 0;
  width: 100%;
}

.image.fit img {
  width: 100%;
}

.image.main {
  display: block;
  margin: 3rem 0;
  width: 100%;
}

.image.main img {
  width: 100%;
}

.image.main:first-child {
  margin-top: 0;
}

.image.fill {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.image.fill img {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/* List */

ol {
  list-style: decimal;
  margin: 0 0 2rem 0;
  padding-left: 1.25rem;
}

ol li {
  padding-left: 0.25rem;
}

ul {
  list-style: disc;
  margin: 0 0 2rem 0;
  padding-left: 1rem;
}

ul li {
  padding-left: 0.325rem;
}

ul.alt {
  list-style: none;
  padding-left: 0;
}

ul.alt > li {
  border-top: solid 1px rgba(144, 144, 144, 0.25);
  padding: 0.75rem 0;
}

ul.alt > li:first-child {
  border-top: 0;
  padding-top: 0;
}

ul.alt > li:last-child {
  padding-bottom: 0;
}

ul.items {
  list-style: none;
  padding-left: 0;
}

ul.items > li {
  padding-left: 0;
  margin: 0 0 3rem 0;
}

ul.items > li > h3 {
  margin: 0 0 1rem 0;
}

ul.items > li > :last-child {
  margin-bottom: 0;
}

ul.items > li:last-child {
  margin-bottom: 0;
}

dl {
  margin: 0 0 2rem 0;
}

dl dt {
  display: block;
  font-weight: 600;
  margin: 0 0 1rem 0;
}

dl dd {
  margin-left: 1.5rem;
}

/* Actions */

ul.actions {
  display: -moz-flex;
  display: -ms-flex;
  display: flex;
  cursor: default;
  list-style: none;
  margin-left: -1rem;
  padding-left: 0;
}

ul.actions li {
  padding: 0 0 0 1rem;
  vertical-align: middle;
}

ul.actions.special {
  -moz-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
  width: 100%;
  margin-left: 0;
}

ul.actions.special li:first-child {
  padding-left: 0;
}

ul.actions.stacked {
  -moz-flex-direction: column;
  flex-direction: column;
  margin-left: 0;
}

ul.actions.stacked li {
  padding: 1.3rem 0 0 0;
}

ul.actions.stacked li:first-child {
  padding-top: 0;
}

ul.actions.fit {
  width: calc(100% + 1rem);
}

ul.actions.fit li {
  -moz-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -ms-flex-shrink: 1;
  flex-shrink: 1;
  width: 100%;
}

ul.actions.fit li > * {
  width: 100%;
}

ul.actions.fit.stacked {
  width: 100%;
}

/* Icons */

ul.icons {
  cursor: default;
  list-style: none;
  padding-left: 0;
}

ul.icons li {
  display: inline-block;
}

ul.icons li:last-child {
  padding-right: 0;
}

ul.icons li .icon {
  transition: background-color 0.25s ease-in-out;
  width: 2.25rem;
  height: 2.25rem;
  text-align: center;
  line-height: 2.25rem;
  border-radius: 2.25rem;
  display: inline-block;
}

ul.icons li .icon:before {
  font-size: 1.25rem;
}

ul.icons li .icon:hover {
  background-color: rgba(144, 144, 144, 0.1);
}

/* Table */

.table-wrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

table {
  margin: 0 0 2rem 0;
  width: 100%;
}

table tbody tr {
  border: solid 1px rgba(144, 144, 144, 0.25);
  border-left: 0;
  border-right: 0;
}

table tbody tr:nth-child(2n + 1) {
  background-color: rgba(144, 144, 144, 0.1);
}

table td {
  padding: 0.75rem 0.75rem;
}

table th {
  color: #000000;
  font-size: 0.9rem;
  font-weight: 600;
  padding: 0 0.75rem 0.75rem 0.75rem;
  text-align: left;
}

table thead {
  border-bottom: solid 2px rgba(144, 144, 144, 0.25);
}

table tfoot {
  border-top: solid 2px rgba(144, 144, 144, 0.25);
}

table.alt {
  border-collapse: separate;
}

table.alt tbody tr td {
  border: solid 1px rgba(144, 144, 144, 0.25);
  border-left-width: 0;
  border-top-width: 0;
}

table.alt tbody tr td:first-child {
  border-left-width: 1px;
}

table.alt tbody tr:first-child td {
  border-top-width: 1px;
}

table.alt thead {
  border-bottom: 0;
}

table.alt tfoot {
  border-top: 0;
}

/* Arrow */

a.arrow {
  border-bottom: 0;
  display: inline-block;
  height: 4rem;
  position: relative;
  width: 6rem;
}

a.arrow .label {
  display: none;
}

a.arrow:before {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 512 512'%3E%3Cpath d='M442.53,346.28L293.65,495.16c-0.33,0.33-0.7,0.62-1.05,0.94c-9.16,9.77-22.15,15.9-36.6,15.9 c-14.44,0-27.43-6.13-36.59-15.88c-0.35-0.33-0.72-0.62-1.06-0.96L69.47,346.28c-19.62-19.62-19.62-51.44,0-71.05 c19.62-19.62,51.43-19.62,71.06,0l65.23,65.23V50.24C205.76,22.5,228.25,0,256,0s50.24,22.5,50.24,50.24v290.21l65.23-65.23 c19.62-19.62,51.43-19.62,71.05,0C462.15,294.84,462.15,326.66,442.53,346.28z' fill='%23000000' /%3E%3C/svg%3E");
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  content: '';
  display: inline-block;
  height: 100%;
  position: relative;
  width: 3rem;
}

/* Gallery */

@-webkit-keyframes gallery-modal-spinner {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes gallery-modal-spinner {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.gallery {
  display: flex;
  flex-wrap: wrap;
  margin: -1.25rem 0 0 -1.25rem;
  width: calc(100% + 1.25rem);
}

.gallery a {
  border-bottom: 0;
  display: block;
  margin: 1.25rem 0 0 1.25rem;
  outline: 0;
  position: relative;
  width: calc(50% - 1.25rem);
}

.gallery a img {
  display: block;
  height: 25vw;
  min-height: 18rem;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: center;
  object-position: center;
  width: 100%;
}

.gallery a.landscape {
  width: 100%;
}

.gallery a.landscape img {
  height: 30vw;
}

.gallery a.portrait img {
  height: 30vw;
}

.gallery .modal {
  display: -moz-flex;
  display: -ms-flex;
  display: flex;
  -moz-align-items: center;
  -ms-align-items: center;
  align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
  pointer-events: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition: opacity 0.5s ease, visibility 0.5s, z-index 0.5s;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  background-color: rgba(255, 255, 255, 0.875);
  height: 100%;
  left: 0;
  opacity: 0;
  outline: 0;
  position: fixed;
  top: 0;
  visibility: none;
  width: 100%;
  z-index: 0;
}

.gallery .modal:before {
  -webkit-animation: gallery-modal-spinner 1s infinite linear;
  animation: gallery-modal-spinner 1s infinite linear;
  transition: opacity 0.25s ease;
  transition-delay: 0.5s;
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='96px' height='96px' viewBox='0 0 96 96' zoomAndPan='disable'%3E%3Cstyle%3Ecircle %7Bfill: transparent%3B stroke: %23000000%3B stroke-width: 2px%3B %7D%3C/style%3E%3Cdefs%3E%3CclipPath id='corner'%3E%3Cpolygon points='0,0 48,0 48,48 96,48 96,96 0,96' /%3E%3C/clipPath%3E%3C/defs%3E%3Cg clip-path='url(%23corner)'%3E%3Ccircle cx='48' cy='48' r='32'/%3E%3C/g%3E%3C/svg%3E");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 4rem;
  content: '';
  display: block;
  height: 4rem;
  left: 50%;
  margin: -2rem 0 0 -2rem;
  opacity: 0;
  position: absolute;
  top: 50%;
  width: 4rem;
}

.gallery .modal:after {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='64px' height='64px' viewBox='0 0 64 64' zoomAndPan='disable'%3E%3Cstyle%3Eline %7Bstroke: %23000000%3Bstroke-width: 2px%3B%7D%3C/style%3E%3Cline x1='20' y1='20' x2='44' y2='44' /%3E%3Cline x1='20' y1='44' x2='44' y2='20' /%3E%3C/svg%3E");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 3rem;
  content: '';
  cursor: pointer;
  display: block;
  height: 4rem;
  position: absolute;
  right: 0.5rem;
  top: 0.5rem;
  width: 4rem;
}

.gallery .modal .inner {
  transform: translateY(0.75rem);
  transition: opacity 0.25s ease, transform 0.25s ease;
  opacity: 0;
}

.gallery .modal .inner img {
  box-shadow: 0 1rem 3rem 0 rgba(0, 0, 0, 0.35);
  display: block;
  max-height: 90vh;
  max-width: 90vw;
}

.gallery .modal.visible {
  pointer-events: auto;
  opacity: 1;
  visibility: visible;
  z-index: 11000;
}

.gallery .modal.visible:before {
  opacity: 1;
}

.gallery .modal.loaded .inner {
  transform: translateY(0);
  transition: opacity 0.5s ease, transform 0.5s ease;
  opacity: 1;
}

.gallery .modal.loaded:before {
  transition-delay: 0s;
  opacity: 0;
}

/* Feature Icons */

ul.feature-icons {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 3rem 0;
  padding-left: 0;
}

ul.feature-icons:first-child {
  margin-top: 0;
}

ul.feature-icons li {
  margin: 2.5rem 0 0 0;
  padding: 0.5rem 0 0 4.5rem;
  position: relative;
  width: 50%;
}

ul.feature-icons li:before {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 512 512'%3E%3Cpath d='M256,0l221.7,128v256L256,512L34.3,384V128L256,0z' fill='rgba(144, 144, 144, 0.1)' /%3E%3C/svg%3E");
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  color: #000000;
  display: block;
  font-size: 1.25rem;
  height: 3.25rem;
  left: 0;
  line-height: 3.25rem;
  position: absolute;
  text-align: center;
  top: 0;
  width: 3.25rem;
}

ul.feature-icons li:nth-child(1),
ul.feature-icons li:nth-child(2) {
  margin-top: 0;
}

/* Wrapper */

#wrapper {
  width: 100%;
  max-width: 100%;
}

#wrapper #main {
  position: relative;
  background-color: #ffffff;
  width: 100%;
  z-index: 2;
}

/* Inner (container) */

.inner {
  width: 83.5em;
  max-width: 100%;
  margin: 0 auto;
  padding: 0 2em;
}

/* Form */

form,
.form {
  margin: 0 0 2rem 0;
}

form .fields,
.form .fields {
  display: -moz-flex;
  display: -ms-flex;
  display: flex;
  flex-wrap: wrap;
  margin: -1rem 0 1rem -1rem;
  width: calc(100% + 2rem);
}

form .fields > .field,
.form .fields > .field {
  -moz-flex-grow: 0;
  -ms-flex-grow: 0;
  flex-grow: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
  padding: 1rem 0 0 1rem;
  width: calc(100% - 1rem);
}

form .fields > .field label,
.form .fields > .field label {
  display: block;
  width: 100%;
  margin: 0 0 0.25rem 0;
  vertical-align: top;
  transition: all 0.25s ease-in-out;
}

form .fields > .field label span,
.form .fields > .field label span {
  display: inline-block;
  width: auto;
  margin: 0 0 0.25rem 0;
  font-family: "Source Sans Pro", Helvetica, sans-serif;
  font-size: 0.875rem;
  font-weight: 400;
  text-align: left;
  letter-spacing: 0.0625rem;
  line-height: 0.875rem;
}

form .fields > .field > :last-child,
.form .fields > .field > :last-child {
  margin-bottom: 0;
}

form .fields > .field.half,
.form .fields > .field.half {
  width: calc(50% - 0.5rem);
}

form .fields > .field.third,
.form .fields > .field.third {
  width: calc(100%/3 - 0.33333rem);
}

form .fields > .field.quarter,
.form .fields > .field.quarter {
  width: calc(25% - 0.25rem);
}

@media screen and (max-width: 1400px) {
  html {
    font-size: 13pt;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
    align-items: stretch;
  }

  .row > * {
    box-sizing: border-box;
  }

  .row.gtr-uniform > * > :last-child {
    margin-bottom: 0;
  }

  .row.aln-left {
    justify-content: flex-start;
  }

  .row.aln-center {
    justify-content: center;
  }

  .row.aln-right {
    justify-content: flex-end;
  }

  .row.aln-top {
    align-items: flex-start;
  }

  .row.aln-middle {
    align-items: center;
  }

  .row.aln-bottom {
    align-items: flex-end;
  }

  .row > .imp-xlarge {
    order: -1;
  }

  .row > .col-1-xlarge {
    width: 8.33333%;
  }

  .row > .off-1-xlarge {
    margin-left: 8.33333%;
  }

  .row > .col-2-xlarge {
    width: 16.66667%;
  }

  .row > .off-2-xlarge {
    margin-left: 16.66667%;
  }

  .row > .col-3-xlarge {
    width: 25%;
  }

  .row > .off-3-xlarge {
    margin-left: 25%;
  }

  .row > .col-4-xlarge {
    width: 33.33333%;
  }

  .row > .off-4-xlarge {
    margin-left: 33.33333%;
  }

  .row > .col-5-xlarge {
    width: 41.66667%;
  }

  .row > .off-5-xlarge {
    margin-left: 41.66667%;
  }

  .row > .col-6-xlarge {
    width: 50%;
  }

  .row > .off-6-xlarge {
    margin-left: 50%;
  }

  .row > .col-7-xlarge {
    width: 58.33333%;
  }

  .row > .off-7-xlarge {
    margin-left: 58.33333%;
  }

  .row > .col-8-xlarge {
    width: 66.66667%;
  }

  .row > .off-8-xlarge {
    margin-left: 66.66667%;
  }

  .row > .col-9-xlarge {
    width: 75%;
  }

  .row > .off-9-xlarge {
    margin-left: 75%;
  }

  .row > .col-10-xlarge {
    width: 83.33333%;
  }

  .row > .off-10-xlarge {
    margin-left: 83.33333%;
  }

  .row > .col-11-xlarge {
    width: 91.66667%;
  }

  .row > .off-11-xlarge {
    margin-left: 91.66667%;
  }

  .row > .col-12-xlarge {
    width: 100%;
  }

  .row > .off-12-xlarge {
    margin-left: 100%;
  }

  .row.gtr-0 {
    margin-top: 0;
    margin-left: 0rem;
  }

  .row.gtr-0 > * {
    padding: 0 0 0 0rem;
  }

  .row.gtr-0.gtr-uniform {
    margin-top: 0rem;
  }

  .row.gtr-0.gtr-uniform > * {
    padding-top: 0rem;
  }

  .row.gtr-25 {
    margin-top: 0;
    margin-left: -0.5rem;
  }

  .row.gtr-25 > * {
    padding: 0 0 0 0.5rem;
  }

  .row.gtr-25.gtr-uniform {
    margin-top: -0.5rem;
  }

  .row.gtr-25.gtr-uniform > * {
    padding-top: 0.5rem;
  }

  .row.gtr-50 {
    margin-top: 0;
    margin-left: -1rem;
  }

  .row.gtr-50 > * {
    padding: 0 0 0 1rem;
  }

  .row.gtr-50.gtr-uniform {
    margin-top: -1rem;
  }

  .row.gtr-50.gtr-uniform > * {
    padding-top: 1rem;
  }

  .row {
    margin-top: 0;
    margin-left: -2rem;
  }

  .row > * {
    padding: 0 0 0 2rem;
  }

  .row.gtr-uniform {
    margin-top: -2rem;
  }

  .row.gtr-uniform > * {
    padding-top: 2rem;
  }

  .row.gtr-150 {
    margin-top: 0;
    margin-left: -3rem;
  }

  .row.gtr-150 > * {
    padding: 0 0 0 3rem;
  }

  .row.gtr-150.gtr-uniform {
    margin-top: -3rem;
  }

  .row.gtr-150.gtr-uniform > * {
    padding-top: 3rem;
  }

  .row.gtr-200 {
    margin-top: 0;
    margin-left: -4rem;
  }

  .row.gtr-200 > * {
    padding: 0 0 0 4rem;
  }

  .row.gtr-200.gtr-uniform {
    margin-top: -4rem;
  }

  .row.gtr-200.gtr-uniform > * {
    padding-top: 4rem;
  }
}

@media screen and (max-width: 1200px) {
  .row {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
    align-items: stretch;
  }

  .row > * {
    box-sizing: border-box;
  }

  .row.gtr-uniform > * > :last-child {
    margin-bottom: 0;
  }

  .row.aln-left {
    justify-content: flex-start;
  }

  .row.aln-center {
    justify-content: center;
  }

  .row.aln-right {
    justify-content: flex-end;
  }

  .row.aln-top {
    align-items: flex-start;
  }

  .row.aln-middle {
    align-items: center;
  }

  .row.aln-bottom {
    align-items: flex-end;
  }

  .row > .imp-large {
    order: -1;
  }

  .row > .col-1-large {
    width: 8.33333%;
  }

  .row > .off-1-large {
    margin-left: 8.33333%;
  }

  .row > .col-2-large {
    width: 16.66667%;
  }

  .row > .off-2-large {
    margin-left: 16.66667%;
  }

  .row > .col-3-large {
    width: 25%;
  }

  .row > .off-3-large {
    margin-left: 25%;
  }

  .row > .col-4-large {
    width: 33.33333%;
  }

  .row > .off-4-large {
    margin-left: 33.33333%;
  }

  .row > .col-5-large {
    width: 41.66667%;
  }

  .row > .off-5-large {
    margin-left: 41.66667%;
  }

  .row > .col-6-large {
    width: 50%;
  }

  .row > .off-6-large {
    margin-left: 50%;
  }

  .row > .col-7-large {
    width: 58.33333%;
  }

  .row > .off-7-large {
    margin-left: 58.33333%;
  }

  .row > .col-8-large {
    width: 66.66667%;
  }

  .row > .off-8-large {
    margin-left: 66.66667%;
  }

  .row > .col-9-large {
    width: 75%;
  }

  .row > .off-9-large {
    margin-left: 75%;
  }

  .row > .col-10-large {
    width: 83.33333%;
  }

  .row > .off-10-large {
    margin-left: 83.33333%;
  }

  .row > .col-11-large {
    width: 91.66667%;
  }

  .row > .off-11-large {
    margin-left: 91.66667%;
  }

  .row > .col-12-large {
    width: 100%;
  }

  .row > .off-12-large {
    margin-left: 100%;
  }

  .row.gtr-0 {
    margin-top: 0;
    margin-left: 0rem;
  }

  .row.gtr-0 > * {
    padding: 0 0 0 0rem;
  }

  .row.gtr-0.gtr-uniform {
    margin-top: 0rem;
  }

  .row.gtr-0.gtr-uniform > * {
    padding-top: 0rem;
  }

  .row.gtr-25 {
    margin-top: 0;
    margin-left: -0.375rem;
  }

  .row.gtr-25 > * {
    padding: 0 0 0 0.375rem;
  }

  .row.gtr-25.gtr-uniform {
    margin-top: -0.375rem;
  }

  .row.gtr-25.gtr-uniform > * {
    padding-top: 0.375rem;
  }

  .row.gtr-50 {
    margin-top: 0;
    margin-left: -0.75rem;
  }

  .row.gtr-50 > * {
    padding: 0 0 0 0.75rem;
  }

  .row.gtr-50.gtr-uniform {
    margin-top: -0.75rem;
  }

  .row.gtr-50.gtr-uniform > * {
    padding-top: 0.75rem;
  }

  .row {
    margin-top: 0;
    margin-left: -1.5rem;
  }

  .row > * {
    padding: 0 0 0 1.5rem;
  }

  .row.gtr-uniform {
    margin-top: -1.5rem;
  }

  .row.gtr-uniform > * {
    padding-top: 1.5rem;
  }

  .row.gtr-150 {
    margin-top: 0;
    margin-left: -2.25rem;
  }

  .row.gtr-150 > * {
    padding: 0 0 0 2.25rem;
  }

  .row.gtr-150.gtr-uniform {
    margin-top: -2.25rem;
  }

  .row.gtr-150.gtr-uniform > * {
    padding-top: 2.25rem;
  }

  .row.gtr-200 {
    margin-top: 0;
    margin-left: -3rem;
  }

  .row.gtr-200 > * {
    padding: 0 0 0 3rem;
  }

  .row.gtr-200.gtr-uniform {
    margin-top: -3rem;
  }

  .row.gtr-200.gtr-uniform > * {
    padding-top: 3rem;
  }

  .inner {
    width: 72em;
    padding: 0 1.5em;
  }
}

@media screen and (max-width: 992px) {
  html {
    font-size: 14pt;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
    align-items: stretch;
  }

  .row > * {
    box-sizing: border-box;
  }

  .row.gtr-uniform > * > :last-child {
    margin-bottom: 0;
  }

  .row.aln-left {
    justify-content: flex-start;
  }

  .row.aln-center {
    justify-content: center;
  }

  .row.aln-right {
    justify-content: flex-end;
  }

  .row.aln-top {
    align-items: flex-start;
  }

  .row.aln-middle {
    align-items: center;
  }

  .row.aln-bottom {
    align-items: flex-end;
  }

  .row > .imp-medium {
    order: -1;
  }

  .row > .col-1-medium {
    width: 8.33333%;
  }

  .row > .off-1-medium {
    margin-left: 8.33333%;
  }

  .row > .col-2-medium {
    width: 16.66667%;
  }

  .row > .off-2-medium {
    margin-left: 16.66667%;
  }

  .row > .col-3-medium {
    width: 25%;
  }

  .row > .off-3-medium {
    margin-left: 25%;
  }

  .row > .col-4-medium {
    width: 33.33333%;
  }

  .row > .off-4-medium {
    margin-left: 33.33333%;
  }

  .row > .col-5-medium {
    width: 41.66667%;
  }

  .row > .off-5-medium {
    margin-left: 41.66667%;
  }

  .row > .col-6-medium {
    width: 50%;
  }

  .row > .off-6-medium {
    margin-left: 50%;
  }

  .row > .col-7-medium {
    width: 58.33333%;
  }

  .row > .off-7-medium {
    margin-left: 58.33333%;
  }

  .row > .col-8-medium {
    width: 66.66667%;
  }

  .row > .off-8-medium {
    margin-left: 66.66667%;
  }

  .row > .col-9-medium {
    width: 75%;
  }

  .row > .off-9-medium {
    margin-left: 75%;
  }

  .row > .col-10-medium {
    width: 83.33333%;
  }

  .row > .off-10-medium {
    margin-left: 83.33333%;
  }

  .row > .col-11-medium {
    width: 91.66667%;
  }

  .row > .off-11-medium {
    margin-left: 91.66667%;
  }

  .row > .col-12-medium {
    width: 100%;
  }

  .row > .off-12-medium {
    margin-left: 100%;
  }

  .row.gtr-0 {
    margin-top: 0;
    margin-left: 0rem;
  }

  .row.gtr-0 > * {
    padding: 0 0 0 0rem;
  }

  .row.gtr-0.gtr-uniform {
    margin-top: 0rem;
  }

  .row.gtr-0.gtr-uniform > * {
    padding-top: 0rem;
  }

  .row.gtr-25 {
    margin-top: 0;
    margin-left: -0.375rem;
  }

  .row.gtr-25 > * {
    padding: 0 0 0 0.375rem;
  }

  .row.gtr-25.gtr-uniform {
    margin-top: -0.375rem;
  }

  .row.gtr-25.gtr-uniform > * {
    padding-top: 0.375rem;
  }

  .row.gtr-50 {
    margin-top: 0;
    margin-left: -0.75rem;
  }

  .row.gtr-50 > * {
    padding: 0 0 0 0.75rem;
  }

  .row.gtr-50.gtr-uniform {
    margin-top: -0.75rem;
  }

  .row.gtr-50.gtr-uniform > * {
    padding-top: 0.75rem;
  }

  .row {
    margin-top: 0;
    margin-left: -1.5rem;
  }

  .row > * {
    padding: 0 0 0 1.5rem;
  }

  .row.gtr-uniform {
    margin-top: -1.5rem;
  }

  .row.gtr-uniform > * {
    padding-top: 1.5rem;
  }

  .row.gtr-150 {
    margin-top: 0;
    margin-left: -2.25rem;
  }

  .row.gtr-150 > * {
    padding: 0 0 0 2.25rem;
  }

  .row.gtr-150.gtr-uniform {
    margin-top: -2.25rem;
  }

  .row.gtr-150.gtr-uniform > * {
    padding-top: 2.25rem;
  }

  .row.gtr-200 {
    margin-top: 0;
    margin-left: -3rem;
  }

  .row.gtr-200 > * {
    padding: 0 0 0 3rem;
  }

  .row.gtr-200.gtr-uniform {
    margin-top: -3rem;
  }

  .row.gtr-200.gtr-uniform > * {
    padding-top: 3rem;
  }

  .gallery a img {
    height: 20rem;
  }

  .gallery a.landscape img {
    height: 25rem;
  }

  .gallery a.portrait img {
    height: 25rem;
  }

  .gallery .modal .inner img {
    max-width: 100vw;
  }

  .inner {
    width: 100%;
    padding: 0 1em;
  }
}

@media screen and (max-width: 767px) {
  html {
    font-size: 12pt;
  }

  h1 {
    font-size: 4.5rem;
    line-height: 1.1;
  }

  h2 {
    font-size: 1.25rem;
    line-height: 1.7;
  }

  h3 {
    font-size: 0.9rem;
  }

  h4 {
    font-size: 0.75rem;
  }

  h5 {
    font-size: 0.675rem;
  }

  hr.major {
    margin: 3rem 0;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
    align-items: stretch;
  }

  .row > * {
    box-sizing: border-box;
  }

  .row.gtr-uniform > * > :last-child {
    margin-bottom: 0;
  }

  .row.aln-left {
    justify-content: flex-start;
  }

  .row.aln-center {
    justify-content: center;
  }

  .row.aln-right {
    justify-content: flex-end;
  }

  .row.aln-top {
    align-items: flex-start;
  }

  .row.aln-middle {
    align-items: center;
  }

  .row.aln-bottom {
    align-items: flex-end;
  }

  .row > .imp-small {
    order: -1;
  }

  .row > .col-1-small {
    width: 8.33333%;
  }

  .row > .off-1-small {
    margin-left: 8.33333%;
  }

  .row > .col-2-small {
    width: 16.66667%;
  }

  .row > .off-2-small {
    margin-left: 16.66667%;
  }

  .row > .col-3-small {
    width: 25%;
  }

  .row > .off-3-small {
    margin-left: 25%;
  }

  .row > .col-4-small {
    width: 33.33333%;
  }

  .row > .off-4-small {
    margin-left: 33.33333%;
  }

  .row > .col-5-small {
    width: 41.66667%;
  }

  .row > .off-5-small {
    margin-left: 41.66667%;
  }

  .row > .col-6-small {
    width: 50%;
  }

  .row > .off-6-small {
    margin-left: 50%;
  }

  .row > .col-7-small {
    width: 58.33333%;
  }

  .row > .off-7-small {
    margin-left: 58.33333%;
  }

  .row > .col-8-small {
    width: 66.66667%;
  }

  .row > .off-8-small {
    margin-left: 66.66667%;
  }

  .row > .col-9-small {
    width: 75%;
  }

  .row > .off-9-small {
    margin-left: 75%;
  }

  .row > .col-10-small {
    width: 83.33333%;
  }

  .row > .off-10-small {
    margin-left: 83.33333%;
  }

  .row > .col-11-small {
    width: 91.66667%;
  }

  .row > .off-11-small {
    margin-left: 91.66667%;
  }

  .row > .col-12-small {
    width: 100%;
  }

  .row > .off-12-small {
    margin-left: 100%;
  }

  .row.gtr-0 {
    margin-top: 0;
    margin-left: 0rem;
  }

  .row.gtr-0 > * {
    padding: 0 0 0 0rem;
  }

  .row.gtr-0.gtr-uniform {
    margin-top: 0rem;
  }

  .row.gtr-0.gtr-uniform > * {
    padding-top: 0rem;
  }

  .row.gtr-25 {
    margin-top: 0;
    margin-left: -0.3125rem;
  }

  .row.gtr-25 > * {
    padding: 0 0 0 0.3125rem;
  }

  .row.gtr-25.gtr-uniform {
    margin-top: -0.3125rem;
  }

  .row.gtr-25.gtr-uniform > * {
    padding-top: 0.3125rem;
  }

  .row.gtr-50 {
    margin-top: 0;
    margin-left: -0.625rem;
  }

  .row.gtr-50 > * {
    padding: 0 0 0 0.625rem;
  }

  .row.gtr-50.gtr-uniform {
    margin-top: -0.625rem;
  }

  .row.gtr-50.gtr-uniform > * {
    padding-top: 0.625rem;
  }

  .row {
    margin-top: 0;
    margin-left: -1.25rem;
  }

  .row > * {
    padding: 0 0 0 1.25rem;
  }

  .row.gtr-uniform {
    margin-top: -1.25rem;
  }

  .row.gtr-uniform > * {
    padding-top: 1.25rem;
  }

  .row.gtr-150 {
    margin-top: 0;
    margin-left: -1.875rem;
  }

  .row.gtr-150 > * {
    padding: 0 0 0 1.875rem;
  }

  .row.gtr-150.gtr-uniform {
    margin-top: -1.875rem;
  }

  .row.gtr-150.gtr-uniform > * {
    padding-top: 1.875rem;
  }

  .row.gtr-200 {
    margin-top: 0;
    margin-left: -2.5rem;
  }

  .row.gtr-200 > * {
    padding: 0 0 0 2.5rem;
  }

  .row.gtr-200.gtr-uniform {
    margin-top: -2.5rem;
  }

  .row.gtr-200.gtr-uniform > * {
    padding-top: 2.5rem;
  }

  input[type="submit"],
  input[type="reset"],
  input[type="button"],
  button,
  .button {
    font-size: 0.7rem;
    height: 3.3rem;
    line-height: 3.3rem;
  }

  input[type="submit"].large,
  input[type="reset"].large,
  input[type="button"].large,
  button.large,
  .button.large {
    font-size: 0.8rem;
    height: 3.75rem;
    line-height: 3.75rem;
  }

  input[type="submit"].small,
  input[type="reset"].small,
  input[type="button"].small,
  button.small,
  .button.small {
    font-size: 0.6rem;
    height: 3rem;
    line-height: 3rem;
  }

  ul.items > li {
    margin: 0 0 2rem 0;
  }

  .gallery {
    margin: -0.625rem 0 0 -0.625rem;
    width: calc(100% + 0.625rem);
  }

  .gallery a {
    margin: 0.625rem 0 0 0.625rem;
    width: calc(50% - 0.625rem);
  }

  .gallery a img {
    height: 20rem;
  }

  .gallery a.landscape img {
    height: 20rem;
  }

  .gallery a.portrait img {
    height: 30rem;
  }

  ul.feature-icons {
    margin: 0 0 3rem 0;
  }

  ul.feature-icons li {
    width: 100%;
  }

  ul.feature-icons li:nth-child(2) {
    margin-top: 2rem;
  }

  .inner {
    padding: 0 0.5em;
  }

  form,
  .form {
    margin-bottom: 1.5em;
  }

  form .fields,
  .form .fields {
    margin: -0.5em 0 0.5em -0.5em;
    width: calc(100% + 1em);
  }

  form .fields > .field,
  .form .fields > .field {
    padding: 0.5em 0 0 0.5em;
    width: calc(100% - 0.5em);
  }

  form .fields > .field.half,
  .form .fields > .field.half {
    width: calc(100% - 0.5em);
  }

  form .fields > .field.third,
  .form .fields > .field.third {
    width: calc(100% - 0.5em);
  }

  form .fields > .field.quarter,
  .form .fields > .field.quarter {
    width: calc(100% - 0.5em);
  }
}

@media screen and (max-width: 576px) {
  html,
  body {
    min-width: 320px;
  }

  html {
    font-size: 11pt;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
    align-items: stretch;
  }

  .row > * {
    box-sizing: border-box;
  }

  .row.gtr-uniform > * > :last-child {
    margin-bottom: 0;
  }

  .row.aln-left {
    justify-content: flex-start;
  }

  .row.aln-center {
    justify-content: center;
  }

  .row.aln-right {
    justify-content: flex-end;
  }

  .row.aln-top {
    align-items: flex-start;
  }

  .row.aln-middle {
    align-items: center;
  }

  .row.aln-bottom {
    align-items: flex-end;
  }

  .row > .imp-xsmall {
    order: -1;
  }

  .row > .col-1-xsmall {
    width: 8.33333%;
  }

  .row > .off-1-xsmall {
    margin-left: 8.33333%;
  }

  .row > .col-2-xsmall {
    width: 16.66667%;
  }

  .row > .off-2-xsmall {
    margin-left: 16.66667%;
  }

  .row > .col-3-xsmall {
    width: 25%;
  }

  .row > .off-3-xsmall {
    margin-left: 25%;
  }

  .row > .col-4-xsmall {
    width: 33.33333%;
  }

  .row > .off-4-xsmall {
    margin-left: 33.33333%;
  }

  .row > .col-5-xsmall {
    width: 41.66667%;
  }

  .row > .off-5-xsmall {
    margin-left: 41.66667%;
  }

  .row > .col-6-xsmall {
    width: 50%;
  }

  .row > .off-6-xsmall {
    margin-left: 50%;
  }

  .row > .col-7-xsmall {
    width: 58.33333%;
  }

  .row > .off-7-xsmall {
    margin-left: 58.33333%;
  }

  .row > .col-8-xsmall {
    width: 66.66667%;
  }

  .row > .off-8-xsmall {
    margin-left: 66.66667%;
  }

  .row > .col-9-xsmall {
    width: 75%;
  }

  .row > .off-9-xsmall {
    margin-left: 75%;
  }

  .row > .col-10-xsmall {
    width: 83.33333%;
  }

  .row > .off-10-xsmall {
    margin-left: 83.33333%;
  }

  .row > .col-11-xsmall {
    width: 91.66667%;
  }

  .row > .off-11-xsmall {
    margin-left: 91.66667%;
  }

  .row > .col-12-xsmall {
    width: 100%;
  }

  .row > .off-12-xsmall {
    margin-left: 100%;
  }

  .row.gtr-0 {
    margin-top: 0;
    margin-left: 0rem;
  }

  .row.gtr-0 > * {
    padding: 0 0 0 0rem;
  }

  .row.gtr-0.gtr-uniform {
    margin-top: 0rem;
  }

  .row.gtr-0.gtr-uniform > * {
    padding-top: 0rem;
  }

  .row.gtr-25 {
    margin-top: 0;
    margin-left: -0.3125rem;
  }

  .row.gtr-25 > * {
    padding: 0 0 0 0.3125rem;
  }

  .row.gtr-25.gtr-uniform {
    margin-top: -0.3125rem;
  }

  .row.gtr-25.gtr-uniform > * {
    padding-top: 0.3125rem;
  }

  .row.gtr-50 {
    margin-top: 0;
    margin-left: -0.625rem;
  }

  .row.gtr-50 > * {
    padding: 0 0 0 0.625rem;
  }

  .row.gtr-50.gtr-uniform {
    margin-top: -0.625rem;
  }

  .row.gtr-50.gtr-uniform > * {
    padding-top: 0.625rem;
  }

  .row {
    margin-top: 0;
    margin-left: -1.25rem;
  }

  .row > * {
    padding: 0 0 0 1.25rem;
  }

  .row.gtr-uniform {
    margin-top: -1.25rem;
  }

  .row.gtr-uniform > * {
    padding-top: 1.25rem;
  }

  .row.gtr-150 {
    margin-top: 0;
    margin-left: -1.875rem;
  }

  .row.gtr-150 > * {
    padding: 0 0 0 1.875rem;
  }

  .row.gtr-150.gtr-uniform {
    margin-top: -1.875rem;
  }

  .row.gtr-150.gtr-uniform > * {
    padding-top: 1.875rem;
  }

  .row.gtr-200 {
    margin-top: 0;
    margin-left: -2.5rem;
  }

  .row.gtr-200 > * {
    padding: 0 0 0 2.5rem;
  }

  .row.gtr-200.gtr-uniform {
    margin-top: -2.5rem;
  }

  .row.gtr-200.gtr-uniform > * {
    padding-top: 2.5rem;
  }

  ul.actions:not(.fixed) {
    -moz-flex-direction: column;
    flex-direction: column;
    margin-left: 0;
    width: 100% !important;
  }

  ul.actions:not(.fixed) li {
    -moz-flex-grow: 1;
    -ms-flex-grow: 1;
    flex-grow: 1;
    -ms-flex-shrink: 1;
    flex-shrink: 1;
    padding: 1rem 0 0 0;
    text-align: center;
    width: 100%;
  }

  ul.actions:not(.fixed) li > * {
    width: 100%;
  }

  ul.actions:not(.fixed) li:first-child {
    padding-top: 0;
  }

  ul.actions:not(.fixed) li input[type="submit"],
  ul.actions:not(.fixed) li input[type="reset"],
  ul.actions:not(.fixed) li input[type="button"],
  ul.actions:not(.fixed) li button,
  ul.actions:not(.fixed) li .button {
    width: 100%;
  }

  ul.actions:not(.fixed) li input[type="submit"].icon:before,
  ul.actions:not(.fixed) li input[type="reset"].icon:before,
  ul.actions:not(.fixed) li input[type="button"].icon:before,
  ul.actions:not(.fixed) li button.icon:before,
  ul.actions:not(.fixed) li .button.icon:before {
    margin-left: -0.5rem;
  }

  .gallery a img {
    height: 12rem;
    min-height: 0;
  }

  .gallery a.landscape img {
    height: 12rem;
  }

  .gallery a.portrait img {
    height: 14rem;
  }
}

@media screen and (max-width: 480px) {
  h1 {
    font-size: 3.75rem;
  }

  h2 {
    font-size: 1.125rem;
  }

  h3 {
    font-size: 0.8rem;
  }

  h4 {
    font-size: 0.675rem;
  }

  h5 {
    font-size: 0.675rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
